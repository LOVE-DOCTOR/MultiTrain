# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload MultiTrain

on:
  release:
    types: [published]

jobs:
  build-n-publish:
    name: Build and publish Python distributions to PyPI and TestPyPI
    runs-on: 'ubuntu-latest'

    if: github.ref == 'refs/heads/v2'

    steps:
    - uses: actions/checkout@v3

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install build
        pip install setuptools
        pip install wheel 
        pip install twine
        pip install .

    - name: Validate package version
      run: |
        RELEASE_TAG=${GITHUB_REF##*/}
        PACKAGE_VERSION=$(python -c "import multitrain; print(multitrain.__version__)")
        echo "Release tag: $RELEASE_TAG"
        echo "Package version: $PACKAGE_VERSION"
        if [ "$RELEASE_TAG" != "$PACKAGE_VERSION" ]; then
          echo "Version mismatch: release tag does not match package version."
          exit 1
        fi

    - name: Build package
      run: | 
        python -m build
        python -m twine upload --verbose dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
